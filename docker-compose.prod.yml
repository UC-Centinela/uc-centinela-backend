version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        NODE_ENV: local
    container_name: uc-centinela-app
    ports:
      - "3443:3443" # Change host port if 3000 is taken, or app port if different
    env_file:
      - .env
    environment:
      NODE_ENV: local
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB} # Adjust connection string
      # Add other environment variables your app needs
      # Example:
      # JWT_SECRET: your_jwt_secret
      # API_KEY: your_api_key
    volumes:
      - .:/usr/src/app # Mounts current directory to app directory in container (for development)
      - /usr/src/app/node_modules # Anonymous volume to prevent local node_modules from overwriting container's
      # If you want to persist Prisma generated client outside of rebuilds during dev:
      # - /usr/src/app/.prisma # Persists .prisma folder
    depends_on:
      - db
    networks:
      - centinela-network
    command: node dist/main.js

  db:
    image: postgres:15-alpine # Use a specific version of Postgres
    container_name: uc-centinela-db
    ports:
      - "5432:5432" # Exposes Postgres port to the host (optional, for direct DB access)
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persists database data
    networks:
      - centinela-network

volumes:
  postgres_data: # Defines the named volume for data persistence

networks:
  centinela-network:
    driver: bridge 