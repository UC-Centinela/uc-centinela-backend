# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  """user id"""
  id: String!

  """user first name"""
  firstName: String!

  """user last name"""
  lastName: String!

  """user email"""
  email: String!

  """user customer id"""
  customerId: String!

  """user role"""
  role: String!

  """user idp id"""
  idpId: String!

  """user rut (Chilean ID)"""
  rut: String
}

type Customer {
  """customer id"""
  id: Int!

  """customer name"""
  name: String!

  """customer industry"""
  industry: String!

  """customer email"""
  email: String!

  """customer created at"""
  createdAt: DateTime!

  """customer updated at"""
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Task {
  id: Int!
  title: String!
  instruction: String!
  comments: String
  state: TaskState!
  changeHistory: String
  assignationDate: DateTime
  requiredSendDate: DateTime
  creatorUserId: Int!
  revisorUserId: Int
}

"""Enum que representa los posibles estados de una tarea"""
enum TaskState {
  PENDING
  IN_PROGRESS
  COMPLETED
  REVIEWED
}

type CriticActivity {
  id: Int!
  title: String!
  taskId: Int!
}

type Multimedia {
  id: Int!
  taskId: Int!
  photoUrl: String
  videoUrl: String
  audioTranscription: String
}

type ControlStrategy {
  id: Int!
  taskId: Int!
  title: String!
}

type Control {
  id: Int!
  criticActivityId: Int!
  title: String!
  description: String
}

type UndesiredEvent {
  id: Int!
  criticActivityId: Int!
  title: String!
  description: String
}

type VerificationQuestion {
  id: Int!
  criticActivityId: Int!
  title: String!
  description: String
}

type Tool {
  id: Int!
  criticActivityId: Int!
  title: String!
}

type Query {
  """Provision service: get all users in the system"""
  allUsers: [User!]!

  """Provision service: get a user by email"""
  getUserByEmail(email: String!): User!

  """Provision service: get all users by customer id"""
  findUsersByCustomerId(customerId: Float!): [User!]!

  """Provision service: get all customers in database"""
  allCustomers: [Customer!]!

  """Provision service: get customer information by email"""
  getCustomerByEmail(email: String!): Customer!
  findAllTasks: [Task!]!
  findTask(id: Int!): Task!
  findTasksByUser(userId: Int!): [Task!]!
  findTasksByReviewer(revisorId: Int!): [Task!]!
  findAllCriticActivities: [CriticActivity!]!
  findCriticActivity(id: Float!): CriticActivity!
  findAllCriticActivitiesByTask(taskId: Float!): [CriticActivity!]!
  findAllMultimedia: [Multimedia!]!
  findMultimedia(id: Int!): Multimedia!
  findAllControlStrategies: [ControlStrategy!]!
  findControlStrategy(id: Int!): ControlStrategy!
  findAllControls: [Control!]!
  findControl(id: Int!): Control!
  findAllUndesiredEvents: [UndesiredEvent!]!
  findUndesiredEvent(id: Int!): UndesiredEvent!
  findUndesiredEventsByCriticActivity(criticActivityId: Int!): [UndesiredEvent!]!
  findAllVerificationQuestions: [VerificationQuestion!]!
  findVerificationQuestion(id: Int!): VerificationQuestion!
  findVerificationQuestionsByCriticActivity(criticActivityId: Int!): [VerificationQuestion!]!
  findAllTools: [Tool!]!
  findTool(id: Int!): Tool!
  findToolsByCriticActivity(criticActivityId: Int!): [Tool!]!
}

type Mutation {
  """Provision service: create a new user, need to specify the customer id"""
  createUser(input: CreateUserInput!): User!

  """Provision service: update a user, need to specify the email"""
  updateUser(updateUserInput: UpdateUserInput!): User!

  """Provision service: remove a user by email"""
  removeUserByEmail(email: String!): Boolean!

  """Provision service: asign a role to a user"""
  assignRole(role: Role!, userEmail: String!): User!

  """
  Provision service: create a new customer with default user Admin by email input
  """
  createCustomer(createCustomerInput: CreateCustomerInput!): Customer!

  """Provision service: update customer information by id"""
  updateCustomer(updateCustomerInput: UpdateCustomerInput!): Customer!

  """
  Provision service: remove customer by id, WARNING: this action will delete all data related, as Users and Devices
  """
  removeCustomer(id: Int!): Boolean!
  createTask(input: CreateTaskInput!): Task!
  updateTask(input: UpdateTaskInput!): Task!
  deleteTask(id: Int!): Boolean!
  createCriticActivity(input: CreateCriticActivityInput!): CriticActivity!
  updateCriticActivity(input: UpdateCriticActivityInput!): CriticActivity!
  deleteCriticActivity(id: Float!): Boolean!
  createMultimedia(input: CreateMultimediaInput!): Multimedia!
  updateMultimedia(input: UpdateMultimediaInput!): Multimedia!
  deleteMultimedia(id: Int!): Boolean!
  uploadVideo(input: UploadVideoInput!): Multimedia!
  createControlStrategy(input: CreateControlStrategyInput!): ControlStrategy!
  updateControlStrategy(input: UpdateControlStrategyInput!): ControlStrategy!
  deleteControlStrategy(id: Int!): Boolean!
  createControl(input: CreateControlInput!): Control!
  updateControl(input: UpdateControlInput!): Control!
  deleteControl(id: Int!): Boolean!
  createUndesiredEvent(input: CreateUndesiredEventInput!): UndesiredEvent!
  updateUndesiredEvent(input: UpdateUndesiredEventInput!): UndesiredEvent!
  deleteUndesiredEvent(id: Int!): Boolean!
  createVerificationQuestion(input: CreateVerificationQuestionInput!): VerificationQuestion!
  updateVerificationQuestion(input: UpdateVerificationQuestionInput!): VerificationQuestion!
  deleteVerificationQuestion(id: Int!): Boolean!
  createTool(input: CreateToolInput!): Tool!
  updateTool(input: UpdateToolInput!): Tool!
  deleteTool(id: Int!): Boolean!
}

input CreateUserInput {
  """user id"""
  id: String

  """user first name"""
  firstName: String!

  """user last name"""
  lastName: String!

  """user email"""
  email: String!

  """user customer id"""
  customerId: Float!

  """user role"""
  role: Role!

  """user rut (Chilean ID)"""
  rut: String
}

"""User role enum"""
enum Role {
  SUPERADMIN
  ADMIN
  OPERATOR
  GUEST
  REVISOR
  USER
}

input UpdateUserInput {
  """user id"""
  id: String

  """user first name"""
  firstName: String

  """user last name"""
  lastName: String
  email: String!

  """user customer id"""
  customerId: Float

  """user role"""
  role: Role

  """user rut (Chilean ID)"""
  rut: String
}

input CreateCustomerInput {
  """customer name"""
  name: String!

  """industry name"""
  industry: String!

  """user email"""
  email: String!
}

input UpdateCustomerInput {
  """customer name"""
  name: String

  """industry name"""
  industry: String

  """user email"""
  email: String
  id: Int!
}

input CreateTaskInput {
  title: String!
  instruction: String!
  state: TaskState!
  comments: String
  changeHistory: String
  assignationDate: DateTime
  requiredSendDate: DateTime
  creatorUserId: Float!
  revisorUserId: Float
}

input UpdateTaskInput {
  title: String
  instruction: String
  state: TaskState
  comments: String
  changeHistory: String
  assignationDate: DateTime
  requiredSendDate: DateTime
  creatorUserId: Float
  revisorUserId: Float
  id: Float!
}

input CreateCriticActivityInput {
  title: String!
  taskId: Int!
}

input UpdateCriticActivityInput {
  title: String
  taskId: Int
  id: Int!
}

input CreateMultimediaInput {
  taskId: Int!
  photoUrl: String
  videoUrl: String
  audioTranscription: String
}

input UpdateMultimediaInput {
  taskId: Int
  photoUrl: String
  videoUrl: String
  audioTranscription: String
  id: Int!
}

input UploadVideoInput {
  taskId: Int!
  filename: String!
  mimetype: String!
  base64: String!
}

input CreateControlStrategyInput {
  title: String!
  taskId: Int!
}

input UpdateControlStrategyInput {
  title: String
  taskId: Int
  id: Int!
}

input CreateControlInput {
  title: String!
  description: String
  criticActivityId: Int!
}

input UpdateControlInput {
  title: String
  description: String
  criticActivityId: Int
  id: Int!
}

input CreateUndesiredEventInput {
  title: String!
  description: String
  criticActivityId: Int!
}

input UpdateUndesiredEventInput {
  title: String
  description: String
  criticActivityId: Int
  id: Int!
}

input CreateVerificationQuestionInput {
  title: String!
  description: String
  criticActivityId: Int!
}

input UpdateVerificationQuestionInput {
  title: String
  description: String
  criticActivityId: Int
  id: Int!
}

input CreateToolInput {
  title: String!
  criticActivityId: Int!
}

input UpdateToolInput {
  title: String
  criticActivityId: Int
  id: Int!
}